# -*- coding: utf-8 -*-
"""Python para DS - Introduccion.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ilb1zXPmIYzabxnSRbK1fhD0ON7L91hh

#**Python para DS - Introduccion**
"""

1+1

nombre = 'Marcelo'

nombre

edad = 29

edad

"""#Mi primera funcion"""

print('Mi nombre es Marcelo y mi edad es 29 años')

print(f'Mi nombre es {nombre} y mi edad es {edad} años')

def saludar():
  nombre= input('Ingrese su nombre: ')
  print(f'Hola {nombre} sea bienvenido!!')

saludar()

"""#Parametros"""

nombre = 'Pepe'

def saludar_con_parametros(nombre):
  print(f'Hola {nombre} sea bienvenido!!')

saludar_con_parametros(nombre)

"""#Condicionales"""

edad = 19

def verificar_si_puede_conducir(edad):
  if (edad>=18):
    print('Usted tiene edad suficiente para conducir')
  else:
    print('Usted no tiene edad suficiente para conducir')

verificar_si_puede_conducir(edad)

"""#Condicionales sin parametros y conversion de tipo de dato"""

def verificar_si_puede_conducir_sin_parametro():
  edad = input('Ingrese su edad: ')
  edad = int(edad)
  if (edad>=18):
    print('Usted tiene edad suficiente para conducir')
  else:
    print('Usted no tiene edad suficiente para conducir')

verificar_si_puede_conducir_sin_parametro()





"""#Listas"""

edades = [13,19,25,45,47]

type(edades)

type(nombre)

type(edad)

edades

edades[2]

edades[0]

edades[0:3]

edades[:]

edades[2:]

# [13, 19, 25, 45, 47]
#  0    1   2   3   4
#  0   -4  -3  -2  -1
edades[-1]

"""#Ciclos y bucles"""

#Bucle fuera de la funcion
edades = [13,19,25,45,47]

def verificar_si_puede_conducir(edad):
  if (edad>=18):
    print('Usted tiene edad suficiente para conducir')
  else:
    print('Usted no tiene edad suficiente para conducir')

for edad in edades:
  verificar_si_puede_conducir(edad)

#Bucle dentro de la funcion
edades = [13,19,25,45,47]

def verificar_si_puede_conducir_con_bucle(edad):
  for edad in edades:
    if (edad>=18):
      print('Usted tiene edad suficiente para conducir')
    else:
      print('Usted no tiene edad suficiente para conducir')


verificar_si_puede_conducir_con_bucle(edades)

"""#Booleano"""

edad = 18

edad >= 18

edad < 18

edad == 18

verificaciones = []
edades = [13, 15, 18]

def verificar_si_puede_conducir_bool(verificaciones,edades):
  for edad in edades:
    if edad>=18:
      verificaciones.append(True)
    else:
      verificaciones.append(False)
  for verificacion in verificaciones:
    if verificacion == True:
      print('Usted tiene edad suficiente para conducir')
    else:
      print('Usted no tiene edad suficiente para conducir')

verificar_si_puede_conducir_bool(verificaciones,edades)

"""#Listas con diferentes tipos de datos"""

persona = ['Mariana', 25, True, 'Mexico']

for elemento in persona:
  print(f'El elemento {elemento} de la lista es del tipo ',type(elemento))

"""#Importando una biblioteca"""

from random import randrange, seed

randrange(0,11)

notas_matematicas = []

notas_matematicas = []
seed(8)
for notas in range(6):
  notas_matematicas.append(randrange(0,11))

notas_matematicas

len(notas_matematicas)

"""#Biblioteca Matplotlib para graficos"""

import matplotlib.pyplot as plt

list(range(1,7))

x = list(range(1,7))
y = notas_matematicas

plt.plot(x,y, marker = 'o')
plt.title('Grafico de las notas de matematicas')
plt.xlabel('Pruebas')
plt.ylabel('Notas')
plt.show()

